import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.d2d9e35b.js";const d=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"BackEnd/Server/Docker学习笔记.md","filePath":"BackEnd/Server/Docker学习笔记.md"}'),p={name:"BackEnd/Server/Docker学习笔记.md"},o=l(`<h2 id="一、解决痛点" tabindex="-1">一、解决痛点 <a class="header-anchor" href="#一、解决痛点" aria-label="Permalink to &quot;一、解决痛点&quot;">​</a></h2><ol><li>环境不一致</li><li>版本不一样</li><li>配置不一致，配置费力费时 <blockquote><p>把源码+配置+环境+版本打包成镜像，装载在Dokcer容器引擎上，达到跨平台无缝接轨运作。 一次镜像，处处运行，从搬家到搬楼。</p></blockquote></li></ol><h2 id="二、优点和应用" tabindex="-1">二、优点和应用 <a class="header-anchor" href="#二、优点和应用" aria-label="Permalink to &quot;二、优点和应用&quot;">​</a></h2><ol><li>便捷升级和快速扩容</li><li>更简单的系统运维</li><li>镜像小、更高效的计算资源</li><li>更快的应用交付和平缓迁移</li><li>利用宿主机内核，不需要加载操作系统OS内核</li></ol><h2 id="三、基本组成" tabindex="-1">三、基本组成 <a class="header-anchor" href="#三、基本组成" aria-label="Permalink to &quot;三、基本组成&quot;">​</a></h2><ol><li>镜像：一个只读的模板，用于创建容器，一个镜像可以创建多个容器。</li><li>容器：镜像创建出来的虚拟化运行环境容器实例（简易的Linux环境）。</li><li>仓库：集中存放镜像的场所，分为公开库和私有库。</li></ol><h2 id="四、工作原理" tabindex="-1">四、工作原理 <a class="header-anchor" href="#四、工作原理" aria-label="Permalink to &quot;四、工作原理&quot;">​</a></h2><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032203456.png" alt=""><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032204209.png" alt=""></p><h2 id="五、centos安装docker" tabindex="-1">五、CentOS安装Docker <a class="header-anchor" href="#五、centos安装docker" aria-label="Permalink to &quot;五、CentOS安装Docker&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">sudo</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">yum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">install</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-y</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">yum-utils</span></span>
<span class="line"><span style="color:#80A665;">yum-config-manager</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--add-repo</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#80A665;">sudo</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">yum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">install</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker-ce</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker-ce-cli</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">containerd.io</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker-compose-plugin</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">version</span></span>
<span class="line"><span style="color:#80A665;">systemctl</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">start</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#启动</span></span>
<span class="line"><span style="color:#80A665;">ps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-ef</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">grep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">hello-world</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#测试</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">sudo</span><span style="color:#393A34;"> </span><span style="color:#B56959;">yum</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-y</span><span style="color:#393A34;"> </span><span style="color:#B56959;">yum-utils</span></span>
<span class="line"><span style="color:#59873A;">yum-config-manager</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--add-repo</span><span style="color:#393A34;"> </span><span style="color:#B56959;">http://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="color:#59873A;">sudo</span><span style="color:#393A34;"> </span><span style="color:#B56959;">yum</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker-ce</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker-ce-cli</span><span style="color:#393A34;"> </span><span style="color:#B56959;">containerd.io</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker-compose-plugin</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">version</span></span>
<span class="line"><span style="color:#59873A;">systemctl</span><span style="color:#393A34;"> </span><span style="color:#B56959;">start</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#启动</span></span>
<span class="line"><span style="color:#59873A;">ps</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-ef</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#59873A;">grep</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#B56959;">hello-world</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#测试</span></span></code></pre></div><h2 id="六、阿里云镜像加速" tabindex="-1">六、阿里云镜像加速 <a class="header-anchor" href="#六、阿里云镜像加速" aria-label="Permalink to &quot;六、阿里云镜像加速&quot;">​</a></h2><p><a href="https://blog.csdn.net/weixin_45764765/article/details/128367219" target="_blank" rel="noreferrer">参考教程</a></p><h2 id="七、常用命令" tabindex="-1">七、常用命令 <a class="header-anchor" href="#七、常用命令" aria-label="Permalink to &quot;七、常用命令&quot;">​</a></h2><h3 id="_1-docker" tabindex="-1">1. Docker <a class="header-anchor" href="#_1-docker" aria-label="Permalink to &quot;1. Docker&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">systemctl</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">enable</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#开机启动</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">system</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">df</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#负载查看</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">systemctl</span><span style="color:#393A34;"> </span><span style="color:#B56959;">enable</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#开机启动</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">system</span><span style="color:#393A34;"> </span><span style="color:#B56959;">df</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#负载查看</span></span></code></pre></div><h3 id="_2-镜像" tabindex="-1">2. 镜像 <a class="header-anchor" href="#_2-镜像" aria-label="Permalink to &quot;2. 镜像&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">images</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#展示本地镜像 -a 所有，-q只显示ID</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">search</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">mongo</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#搜索镜像</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">search</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">redis</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--limit</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">5</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#展示Stars排名前五条</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">pull</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">镜像名[:TAG]</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">#下载镜像，没有版本号默认最新</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rmi</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-f</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">hello-world</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#强制删除镜像</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">images</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#展示本地镜像 -a 所有，-q只显示ID</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">search</span><span style="color:#393A34;"> </span><span style="color:#B56959;">mongo</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#搜索镜像</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">search</span><span style="color:#393A34;"> </span><span style="color:#B56959;">redis</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--limit</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">5</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#展示Stars排名前五条</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">pull</span><span style="color:#393A34;"> </span><span style="color:#B56959;">镜像名[:TAG]</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">#下载镜像，没有版本号默认最新</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rmi</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-f</span><span style="color:#393A34;"> </span><span style="color:#B56959;">hello-world</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#强制删除镜像</span></span></code></pre></div><blockquote><p>虚悬镜像：构建或删除过程中产生的仓库名和标签都为none的镜像，没啥用建议删除 <code>docker image ls -f dangling=true</code> 删除：<code>docker image prune</code></p></blockquote><p><strong>生成新镜像</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">agt-get</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">update</span></span>
<span class="line"><span style="color:#80A665;">apt-get</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-y</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">install</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">vim</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">commit</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-m=</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">vim is ok</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-a=</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">fxj</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">myubt:1.1</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">agt-get</span><span style="color:#393A34;"> </span><span style="color:#B56959;">update</span></span>
<span class="line"><span style="color:#59873A;">apt-get</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-y</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#B56959;">vim</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">commit</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-m=</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">vim is ok</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-a=</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">fxj</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id</span><span style="color:#393A34;"> </span><span style="color:#B56959;">myubt:1.1</span></span></code></pre></div><p><strong>本地镜像推送到阿里云</strong></p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">#发布和拉取</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">login</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--username=yunzhishangfxj</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">registry.cn-hangzhou.aliyuncs.com</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tag</span><span style="color:#DBD7CAEE;"> [ImageId] registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:</span><span style="color:#666666;">[</span><span style="color:#DBD7CAEE;">镜像版本号</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">push</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:[镜像版本号]</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-it</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:1.1</span><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D;">/bin/bash</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#记得带版本</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">#发布和拉取</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">login</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--username=yunzhishangfxj</span><span style="color:#393A34;"> </span><span style="color:#B56959;">registry.cn-hangzhou.aliyuncs.com</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tag</span><span style="color:#393A34;"> [ImageId] registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:</span><span style="color:#999999;">[</span><span style="color:#393A34;">镜像版本号</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">push</span><span style="color:#393A34;"> </span><span style="color:#B56959;">registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:[镜像版本号]</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-it</span><span style="color:#393A34;"> </span><span style="color:#B56959;">registry.cn-hangzhou.aliyuncs.com/fanxj/mubt:1.1</span><span style="color:#393A34;">  </span><span style="color:#B56959;">/bin/bash</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#记得带版本</span></span></code></pre></div><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032206243.png" alt=""></p><h3 id="_3-容器" tabindex="-1">3. 容器 <a class="header-anchor" href="#_3-容器" aria-label="Permalink to &quot;3. 容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">ps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#列出正在运行容器 -a -s</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-it</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name=</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">ub01</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D;">ubuntu</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/bin/bash</span></span>
<span class="line"><span style="color:#758575DD;">#-p: 外部主机端口:docker容器端口 -P:随机分配主机端口映射到内部容器端口</span></span>
<span class="line"><span style="color:#758575DD;">#-i:交互式 -t:输出伪终端 -d:后台运行 --name=&quot;容器名&quot; /bin/bash:指定命令解释器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">exit</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#退出，ctrl+q+p:退出但不停止</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">exec</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-it</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/bin/bash</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#重新进容器，exit退出不会停止容器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">start</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id或容器名</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">restart</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">stop</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">kill</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#强制停止</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id或容器名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#删除已停止容器 、未停止 -f 强制删除</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rm</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-f</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">$(</span><span style="color:#80A665;">docker</span><span style="color:#C98A7D;"> ps </span><span style="color:#C99076;">-a</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">-q</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">ps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-q</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">xargs</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#一次性删除多个再运行的</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">ps</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#列出正在运行容器 -a -s</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-it</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name=</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">ub01</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;">  </span><span style="color:#B56959;">ubuntu</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/bin/bash</span></span>
<span class="line"><span style="color:#A0ADA0;">#-p: 外部主机端口:docker容器端口 -P:随机分配主机端口映射到内部容器端口</span></span>
<span class="line"><span style="color:#A0ADA0;">#-i:交互式 -t:输出伪终端 -d:后台运行 --name=&quot;容器名&quot; /bin/bash:指定命令解释器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">exit</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#退出，ctrl+q+p:退出但不停止</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">exec</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-it</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/bin/bash</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#重新进容器，exit退出不会停止容器</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">start</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id或容器名</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">restart</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">stop</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">kill</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#强制停止</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id或容器名</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#删除已停止容器 、未停止 -f 强制删除</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rm</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rm</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-f</span><span style="color:#393A34;"> </span><span style="color:#999999;">$(</span><span style="color:#59873A;">docker</span><span style="color:#B56959;"> ps </span><span style="color:#A65E2B;">-a</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">-q</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">ps</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-a</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-q</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#59873A;">xargs</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rm</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#一次性删除多个再运行的</span></span></code></pre></div><h4 id="启动守护式" tabindex="-1">启动守护式 <a class="header-anchor" href="#启动守护式" aria-label="Permalink to &quot;启动守护式&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-it</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#前台交互启动</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">#后台守护启动</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-it</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#前台交互启动</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">#后台守护启动</span></span></code></pre></div><h4 id="查看容器日志" tabindex="-1">查看容器日志 <a class="header-anchor" href="#查看容器日志" aria-label="Permalink to &quot;查看容器日志&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">logs</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#查看容器日志</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">inspect</span><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D;">容器id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#查看容器内部细节</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">logs</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#查看容器日志</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">inspect</span><span style="color:#393A34;">  </span><span style="color:#B56959;">容器id</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#查看容器内部细节</span></span></code></pre></div><h4 id="容器备份到主机" tabindex="-1">容器备份到主机 <a class="header-anchor" href="#容器备份到主机" aria-label="Permalink to &quot;容器备份到主机&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">cp</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id:容器文件路径</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">目的主机路径</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">#备份文件</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">xxx.tar</span><span style="color:#DBD7CAEE;">   </span><span style="color:#758575DD;">#备份整个容器</span></span>
<span class="line"><span style="color:#80A665;">cat</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">ub.tar</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">恢复后的镜像名</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">#从tar包中恢复成镜像</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-it</span><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D;">镜像id</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/bin/bash</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#重新恢复容器</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">cp</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id:容器文件路径</span><span style="color:#393A34;"> </span><span style="color:#B56959;">目的主机路径</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">#备份文件</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">export</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器id</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#B56959;">xxx.tar</span><span style="color:#393A34;">   </span><span style="color:#A0ADA0;">#备份整个容器</span></span>
<span class="line"><span style="color:#59873A;">cat</span><span style="color:#393A34;"> </span><span style="color:#B56959;">ub.tar</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">import</span><span style="color:#393A34;"> </span><span style="color:#B56959;">-</span><span style="color:#393A34;"> </span><span style="color:#B56959;">恢复后的镜像名</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">#从tar包中恢复成镜像</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-it</span><span style="color:#393A34;">  </span><span style="color:#B56959;">镜像id</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/bin/bash</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#重新恢复容器</span></span></code></pre></div><h4 id="容器卷" tabindex="-1">容器卷 <a class="header-anchor" href="#容器卷" aria-label="Permalink to &quot;容器卷&quot;">​</a></h4><h2 id="八、dockerfile编写" tabindex="-1">八、<a href="https://docs.docker.com/engine/reference/builder/#from" target="_blank" rel="noreferrer">Dockerfile</a>编写 <a class="header-anchor" href="#八、dockerfile编写" aria-label="Permalink to &quot;八、[Dockerfile](https://docs.docker.com/engine/reference/builder/#from)编写&quot;">​</a></h2><div class="language-dockerfile vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">dockerfile</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">#基础镜像，基于什么镜像什么版本作为模版</span></span>
<span class="line"><span style="color:#4D9375;">From</span><span style="color:#DBD7CAEE;"> xxx:1.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#构建参数，运行时无效，可以构建时候临时修改变量（docker build --build-arg B=10）</span></span>
<span class="line"><span style="color:#4D9375;">ARG</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#定义运行时环境变量，运行时一直生效后续可以引用， ARG变量可以传递给ENV</span></span>
<span class="line"><span style="color:#4D9375;">ENV</span><span style="color:#DBD7CAEE;"> NGINX_HOME /usr/local/nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#指定进入容器后的默认工作目录（落脚点）</span></span>
<span class="line"><span style="color:#4D9375;">WORKDIR</span><span style="color:#DBD7CAEE;"> $NGINX_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#将宿主机的文件拷贝到镜像</span></span>
<span class="line"><span style="color:#4D9375;">COPY</span><span style="color:#DBD7CAEE;"> &lt;src&gt;  &lt;dest&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#将主机目录下的文件拷贝到镜像，且会自动处理URL和解压tar压缩包</span></span>
<span class="line"><span style="color:#4D9375;">ADD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#Dockerfile构建时运行(docker build)，</span></span>
<span class="line"><span style="color:#4D9375;">RUN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#容器启动后(docker run)执行的脚本，多个命令时只会生效最后一个???</span></span>
<span class="line"><span style="color:#758575DD;">#会被docker run之后的参数替换(/bin/bash)</span></span>
<span class="line"><span style="color:#4D9375;">CMD</span><span style="color:#DBD7CAEE;">  [</span><span style="color:#C98A7D;">&quot;/etc/nginx/nginx.conf&quot;</span><span style="color:#DBD7CAEE;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#类似CMD,但是不会(docker run)后面命令覆盖，而且可以接收CMD传的参数</span></span>
<span class="line"><span style="color:#4D9375;">ENTRYPOINT</span><span style="color:#DBD7CAEE;"> [</span><span style="color:#C98A7D;">&quot;nginx&quot;</span><span style="color:#DBD7CAEE;">,</span><span style="color:#C98A7D;">&quot;-c&quot;</span><span style="color:#DBD7CAEE;">] ==&gt; nginx -c /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="color:#758575DD;">#docker run nginx:test -c /etc/nginx/new.conf ==&gt; nginx -c /etc/nginx/new.conf</span></span>
<span class="line"><span style="color:#DBD7CAEE;">一般语句为：</span></span>
<span class="line"><span style="color:#4D9375;">FROM</span><span style="color:#DBD7CAEE;"> WORKDIR COPY-ADD RUN CMD-ENTRYPOINT</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#暴露镜像的指定端口</span></span>
<span class="line"><span style="color:#4D9375;">EXPOSE</span><span style="color:#DBD7CAEE;"> 9999</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#指定容器卷</span></span>
<span class="line"><span style="color:#4D9375;">VOLUME</span><span style="color:#DBD7CAEE;"> [</span><span style="color:#C98A7D;">&quot;/var/www&quot;</span><span style="color:#DBD7CAEE;">, </span><span style="color:#C98A7D;">&quot;/var/log/apache2&quot;</span><span style="color:#DBD7CAEE;">, </span><span style="color:#C98A7D;">&quot;/etc/apache2&quot;</span><span style="color:#DBD7CAEE;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#指定元数据，标识容器便于查找</span></span>
<span class="line"><span style="color:#4D9375;">LABEL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#当前镜像构建的时候不会执行，基于当前镜像的镜像去构建的时候才会在FROM后执行</span></span>
<span class="line"><span style="color:#DBD7CAEE;">ONBUILD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#指定容器使用什么信号，一般指定信号名</span></span>
<span class="line"><span style="color:#4D9375;">STOPSIGNAL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#检查容易的健康状态</span></span>
<span class="line"><span style="color:#4D9375;">HEALTHCHECK</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#指定命令解释器 linux为/bin/sh，windows为cmd</span></span>
<span class="line"><span style="color:#4D9375;">SHELL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#用于指定RUN CMD等指令运行时的用户身份，不指定是root(用户名:用户组 或 USER 用户id:组id)</span></span>
<span class="line"><span style="color:#4D9375;">USER</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">#基础镜像，基于什么镜像什么版本作为模版</span></span>
<span class="line"><span style="color:#1E754F;">From</span><span style="color:#393A34;"> xxx:1.1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#构建参数，运行时无效，可以构建时候临时修改变量（docker build --build-arg B=10）</span></span>
<span class="line"><span style="color:#1E754F;">ARG</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#定义运行时环境变量，运行时一直生效后续可以引用， ARG变量可以传递给ENV</span></span>
<span class="line"><span style="color:#1E754F;">ENV</span><span style="color:#393A34;"> NGINX_HOME /usr/local/nginx</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#指定进入容器后的默认工作目录（落脚点）</span></span>
<span class="line"><span style="color:#1E754F;">WORKDIR</span><span style="color:#393A34;"> $NGINX_HOME</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#将宿主机的文件拷贝到镜像</span></span>
<span class="line"><span style="color:#1E754F;">COPY</span><span style="color:#393A34;"> &lt;src&gt;  &lt;dest&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#将主机目录下的文件拷贝到镜像，且会自动处理URL和解压tar压缩包</span></span>
<span class="line"><span style="color:#1E754F;">ADD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#Dockerfile构建时运行(docker build)，</span></span>
<span class="line"><span style="color:#1E754F;">RUN</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#容器启动后(docker run)执行的脚本，多个命令时只会生效最后一个???</span></span>
<span class="line"><span style="color:#A0ADA0;">#会被docker run之后的参数替换(/bin/bash)</span></span>
<span class="line"><span style="color:#1E754F;">CMD</span><span style="color:#393A34;">  [</span><span style="color:#B56959;">&quot;/etc/nginx/nginx.conf&quot;</span><span style="color:#393A34;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#类似CMD,但是不会(docker run)后面命令覆盖，而且可以接收CMD传的参数</span></span>
<span class="line"><span style="color:#1E754F;">ENTRYPOINT</span><span style="color:#393A34;"> [</span><span style="color:#B56959;">&quot;nginx&quot;</span><span style="color:#393A34;">,</span><span style="color:#B56959;">&quot;-c&quot;</span><span style="color:#393A34;">] ==&gt; nginx -c /etc/nginx/nginx.conf</span></span>
<span class="line"><span style="color:#A0ADA0;">#docker run nginx:test -c /etc/nginx/new.conf ==&gt; nginx -c /etc/nginx/new.conf</span></span>
<span class="line"><span style="color:#393A34;">一般语句为：</span></span>
<span class="line"><span style="color:#1E754F;">FROM</span><span style="color:#393A34;"> WORKDIR COPY-ADD RUN CMD-ENTRYPOINT</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#暴露镜像的指定端口</span></span>
<span class="line"><span style="color:#1E754F;">EXPOSE</span><span style="color:#393A34;"> 9999</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#指定容器卷</span></span>
<span class="line"><span style="color:#1E754F;">VOLUME</span><span style="color:#393A34;"> [</span><span style="color:#B56959;">&quot;/var/www&quot;</span><span style="color:#393A34;">, </span><span style="color:#B56959;">&quot;/var/log/apache2&quot;</span><span style="color:#393A34;">, </span><span style="color:#B56959;">&quot;/etc/apache2&quot;</span><span style="color:#393A34;">]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#指定元数据，标识容器便于查找</span></span>
<span class="line"><span style="color:#1E754F;">LABEL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#当前镜像构建的时候不会执行，基于当前镜像的镜像去构建的时候才会在FROM后执行</span></span>
<span class="line"><span style="color:#393A34;">ONBUILD</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#指定容器使用什么信号，一般指定信号名</span></span>
<span class="line"><span style="color:#1E754F;">STOPSIGNAL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#检查容易的健康状态</span></span>
<span class="line"><span style="color:#1E754F;">HEALTHCHECK</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#指定命令解释器 linux为/bin/sh，windows为cmd</span></span>
<span class="line"><span style="color:#1E754F;">SHELL</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#用于指定RUN CMD等指令运行时的用户身份，不指定是root(用户名:用户组 或 USER 用户id:组id)</span></span>
<span class="line"><span style="color:#1E754F;">USER</span></span></code></pre></div><h2 id="九、docker网络" tabindex="-1">九、Docker网络 <a class="header-anchor" href="#九、docker网络" aria-label="Permalink to &quot;九、Docker网络&quot;">​</a></h2><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">ls</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#查看网络</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">inspect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">网络名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#查看网络源数据</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">rm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">网络名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#删除网络</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">create</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">网络名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#新建网络</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">inspect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">bridge</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">|</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">grep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">docker0</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#查看网卡信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;"># --network 不指定默认就是网桥模式</span></span>
<span class="line"><span style="color:#758575DD;">#host主机模式(不能指定端口，共享宿主机的ip，没有自己的ip，http://宿主机ip:端口)</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">host</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">镜像名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">none</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">镜像名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">#只有lo网卡</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">ls</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#查看网络</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">inspect</span><span style="color:#393A34;"> </span><span style="color:#B56959;">网络名</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#查看网络源数据</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">rm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">网络名</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#删除网络</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">create</span><span style="color:#393A34;"> </span><span style="color:#B56959;">网络名</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#新建网络</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">inspect</span><span style="color:#393A34;"> </span><span style="color:#B56959;">bridge</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">|</span><span style="color:#393A34;"> </span><span style="color:#59873A;">grep</span><span style="color:#393A34;"> </span><span style="color:#B56959;">docker0</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#查看网卡信息</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;"># --network 不指定默认就是网桥模式</span></span>
<span class="line"><span style="color:#A0ADA0;">#host主机模式(不能指定端口，共享宿主机的ip，没有自己的ip，http://宿主机ip:端口)</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">host</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器名</span><span style="color:#393A34;"> </span><span style="color:#B56959;">镜像名</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">none</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器名</span><span style="color:#393A34;"> </span><span style="color:#B56959;">镜像名</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">#只有lo网卡</span></span></code></pre></div><h4 id="共用网卡" tabindex="-1">共用网卡 <a class="header-anchor" href="#共用网卡" aria-label="Permalink to &quot;共用网卡&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">container:另一个容器名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">容器名</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/bin/bash</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">镜像名</span></span>
<span class="line"><span style="color:#758575DD;">#共用的容器关闭，这个容器网卡也没有啦</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">container:另一个容器名</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">容器名</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/bin/bash</span><span style="color:#393A34;"> </span><span style="color:#B56959;">镜像名</span></span>
<span class="line"><span style="color:#A0ADA0;">#共用的容器关闭，这个容器网卡也没有啦</span></span></code></pre></div><h4 id="自定义网络" tabindex="-1">自定义网络 <a class="header-anchor" href="#自定义网络" aria-label="Permalink to &quot;自定义网络&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">#启动两个网桥模式容器</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-p</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">8081</span><span style="color:#C98A7D;">:8080</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat81</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-p</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">8082</span><span style="color:#C98A7D;">:8080</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat82</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">#两个ip可以相互ping通，痛点：按域名ping不通</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">#启动两个网桥模式容器</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-p</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">8081</span><span style="color:#B56959;">:8080</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat81</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-p</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">8082</span><span style="color:#B56959;">:8080</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat82</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">#两个ip可以相互ping通，痛点：按域名ping不通</span></span></code></pre></div><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-p</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">8081</span><span style="color:#C98A7D;">:8080</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">my_network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat81</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat</span></span>
<span class="line"><span style="color:#80A665;">docker</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">run</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-d</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-p</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">8082</span><span style="color:#C98A7D;">:8080</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">my_network</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--name</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat82</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">tomcat</span></span>
<span class="line"><span style="color:#758575DD;">#ip、域名互ping都能通（维护好主机和ip的关系）</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-p</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">8081</span><span style="color:#B56959;">:8080</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">my_network</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat81</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat</span></span>
<span class="line"><span style="color:#59873A;">docker</span><span style="color:#393A34;"> </span><span style="color:#B56959;">run</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-d</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-p</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">8082</span><span style="color:#B56959;">:8080</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--network</span><span style="color:#393A34;"> </span><span style="color:#B56959;">my_network</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--name</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat82</span><span style="color:#393A34;"> </span><span style="color:#B56959;">tomcat</span></span>
<span class="line"><span style="color:#A0ADA0;">#ip、域名互ping都能通（维护好主机和ip的关系）</span></span></code></pre></div><h2 id="十、容器编排" tabindex="-1">十、<a href="https://docs.docker.com/compose/compose-file/" target="_blank" rel="noreferrer">容器编排</a> <a class="header-anchor" href="#十、容器编排" aria-label="Permalink to &quot;十、[容器编排](https://docs.docker.com/compose/compose-file/)&quot;">​</a></h2><blockquote><p>意义：集中快速管理多个容器</p></blockquote><h4 id="_1-安装compose" tabindex="-1">1. <a href="https://docs.docker.com/compose/install/" target="_blank" rel="noreferrer">安装Compose</a> <a class="header-anchor" href="#_1-安装compose" aria-label="Permalink to &quot;1. [安装Compose](https://docs.docker.com/compose/install/)&quot;">​</a></h4><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">curl</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-SL</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-linux-x86_64</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-o</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">/usr/local/bin/docker-compose</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">curl</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-SL</span><span style="color:#393A34;"> </span><span style="color:#B56959;">https://github.com/docker/compose/releases/download/v2.14.2/docker-compose-linux-x86_64</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-o</span><span style="color:#393A34;"> </span><span style="color:#B56959;">/usr/local/bin/docker-compose</span></span></code></pre></div><h4 id="_2-常用命令" tabindex="-1">2. <a href="https://cloud.tencent.com/developer/article/1499032" target="_blank" rel="noreferrer">常用命令</a> <a class="header-anchor" href="#_2-常用命令" aria-label="Permalink to &quot;2. [常用命令](https://cloud.tencent.com/developer/article/1499032)&quot;">​</a></h4><p><img src="https://zerdocs.oss-cn-shanghai.aliyuncs.com/febasis/202302032205681.png" alt=""></p><h4 id="_3-安装-portainer" tabindex="-1">3. <a href="https://cloud.tencent.com/developer/article/2047779" target="_blank" rel="noreferrer">安装 Portainer</a> <a class="header-anchor" href="#_3-安装-portainer" aria-label="Permalink to &quot;3. [安装 Portainer](https://cloud.tencent.com/developer/article/2047779)&quot;">​</a></h4>`,48),e=[o];function c(t,r,y,A,D,i){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{d as __pageData,C as default};
