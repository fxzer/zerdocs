import{_ as s,o as a,c as n,Q as l}from"./chunks/framework.d2d9e35b.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"FrontEnd/JavaScript/基础复习一.md","filePath":"FrontEnd/JavaScript/基础复习一.md"}'),p={name:"FrontEnd/JavaScript/基础复习一.md"},o=l(`<h3 id="_1-算术运算符" tabindex="-1">1.算术运算符 <a class="header-anchor" href="#_1-算术运算符" aria-label="Permalink to &quot;1.算术运算符&quot;">​</a></h3><p><strong>隐式类型转换</strong></p><blockquote><p>除了<strong>加法</strong>和其他<em>字符串</em>运算时，它先将其他值转为字符串，在进行拼接；其他运算它先将其他值转为<em>数字</em>，在进行运算</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">5</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 5</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 9</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 10</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// NaN</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 10</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">5</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 5</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 9</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 10</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// NaN</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 10</span></span></code></pre></div><h3 id="_2-赋值运算符" tabindex="-1">2.赋值运算符 <a class="header-anchor" href="#_2-赋值运算符" aria-label="Permalink to &quot;2.赋值运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">+</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// a += 10  (*=   /=   %=    **=)</span></span>
<span class="line"><span style="color:#758575DD;">//  ??= 只有当a为undefined或null才会进行赋值</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">+</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// a += 10  (*=   /=   %=    **=)</span></span>
<span class="line"><span style="color:#A0ADA0;">//  ??= 只有当a为undefined或null才会进行赋值</span></span></code></pre></div><h3 id="_3-运算符" tabindex="-1">3..运算符 <a class="header-anchor" href="#_3-运算符" aria-label="Permalink to &quot;3..运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">+</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">123</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 123</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">123</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#BD976A;">b</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#BD976A;">a</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// -123</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">+</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">123</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 123</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">123</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#B07D48;">b</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#B07D48;">a</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// -123</span></span></code></pre></div><h3 id="_4-自增和自减" tabindex="-1">4.自增和自减 <a class="header-anchor" href="#_4-自增和自减" aria-label="Permalink to &quot;4.自增和自减&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">//  ++ 使用后回事原来的变量立刻增加1</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#CB7676;">++</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#BD976A;">a</span><span style="color:#CB7676;">--</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 前自增:返回自增前的值</span></span>
<span class="line"><span style="color:#758575DD;">// 后自增:返回自增后的值</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">//  ++ 使用后回事原来的变量立刻增加1</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#AB5959;">++</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#B07D48;">a</span><span style="color:#AB5959;">--</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 前自增:返回自增前的值</span></span>
<span class="line"><span style="color:#A0ADA0;">// 后自增:返回自增后的值</span></span></code></pre></div><h3 id="_5-逻辑运算符" tabindex="-1">5.逻辑运算符 <a class="header-anchor" href="#_5-逻辑运算符" aria-label="Permalink to &quot;5.逻辑运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">!</span><span style="color:#DBD7CAEE;">   </span><span style="color:#758575DD;">//逻辑非:对布尔值值取反,对非布尔值值取反,会先将其转为布尔值值再取反,可运用于隐式转布尔值   !!123 -&gt; true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">//逻辑与:左右都为true返回true,否则返回false;非布尔值运算,会先转为布尔值后运算,但是最终返回原值</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">//-  第一个值为(falsy),则直接返回第一个值的原值1,如果第一个值为ture,则直接返回第二个值</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">NaN</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">NaN</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4C9A91;">0</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;">     </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">undefined</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4C9A91;">1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#DBD7CAEE;">     </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">//逻辑或:左右有true,则不看第二个值,则返回true的原值,否则返回false</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4C9A91;">12</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">   </span><span style="color:#4C9A91;">12</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">null</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#B8A965;">a </span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">   </span><span style="color:#666666;">{</span><span style="color:#B8A965;">a </span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">1</span><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">!</span><span style="color:#393A34;">   </span><span style="color:#A0ADA0;">//逻辑非:对布尔值值取反,对非布尔值值取反,会先将其转为布尔值值再取反,可运用于隐式转布尔值   !!123 -&gt; true</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">//逻辑与:左右都为true返回true,否则返回false;非布尔值运算,会先转为布尔值后运算,但是最终返回原值</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">//-  第一个值为(falsy),则直接返回第一个值的原值1,如果第一个值为ture,则直接返回第二个值</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">NaN</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">NaN</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#2F798A;">0</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#393A34;">     </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">undefined</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#2F798A;">1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#393A34;">     </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">  </span><span style="color:#1E754F;">false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">||</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">//逻辑或:左右有true,则不看第二个值,则返回true的原值,否则返回false</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#2F798A;">12</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#393A34;">    </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">   </span><span style="color:#2F798A;">12</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">null</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#998418;">a </span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">   </span><span style="color:#999999;">{</span><span style="color:#998418;">a </span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">1</span><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_6-关系运算符" tabindex="-1">6.关系运算符 <a class="header-anchor" href="#_6-关系运算符" aria-label="Permalink to &quot;6.关系运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">//用来检查两个值的关系是否成立,成立返回true,否则返回false (多个比较用&amp;&amp;)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&gt;=</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;=</span></span>
<span class="line"><span style="color:#758575DD;">// 非数值与数值比较会先非数值转为数值再比较  7 &lt; &#39;10&#39; -&gt;  true</span></span>
<span class="line"><span style="color:#758575DD;">//  两端为字符串则逐个比较字符的Unicode编码</span></span>
<span class="line"><span style="color:#DBD7CAEE;">   </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">a</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span></span>
<span class="line"><span style="color:#DBD7CAEE;">   </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">abc</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">b</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">(</span><span style="color:#BD976A;">比完第一位则结束</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">   </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">12</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">//用来检查两个值的关系是否成立,成立返回true,否则返回false (多个比较用&amp;&amp;)</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">  </span><span style="color:#999999;">&gt;=</span><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;=</span></span>
<span class="line"><span style="color:#A0ADA0;">// 非数值与数值比较会先非数值转为数值再比较  7 &lt; &#39;10&#39; -&gt;  true</span></span>
<span class="line"><span style="color:#A0ADA0;">//  两端为字符串则逐个比较字符的Unicode编码</span></span>
<span class="line"><span style="color:#393A34;">   </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">a</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span></span>
<span class="line"><span style="color:#393A34;">   </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">abc</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">b</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">(</span><span style="color:#B07D48;">比完第一位则结束</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">   </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">12</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span></span></code></pre></div><h3 id="_7-相等运算符" tabindex="-1">7.相等运算符 <a class="header-anchor" href="#_7-相等运算符" aria-label="Permalink to &quot;7.相等运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">==/!=</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">//用来比较两个值是否相等/不相等,不同类型会转为相同类型再比较</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">//null和undefined进行相等比较会返回true(null == undefined -&gt; true)</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">//NaN不和任何值相等,包括它自身</span></span>
<span class="line"><span style="color:#CB7676;">===/!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//检查两个值是否全等/不全等,不会自动类型转换</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">2</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">2</span><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">-</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">//null === undefined -&gt; false</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">==/!=</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">//用来比较两个值是否相等/不相等,不同类型会转为相同类型再比较</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">==</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">//null和undefined进行相等比较会返回true(null == undefined -&gt; true)</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">//NaN不和任何值相等,包括它自身</span></span>
<span class="line"><span style="color:#AB5959;">===/!==</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//检查两个值是否全等/不全等,不会自动类型转换</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">2</span><span style="color:#B5695999;">&#39;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">==</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">2</span><span style="color:#393A34;">  </span><span style="color:#AB5959;">-</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">//null === undefined -&gt; false</span></span></code></pre></div><h3 id="_8-条件运算符" tabindex="-1">8.条件运算符 <a class="header-anchor" href="#_8-条件运算符" aria-label="Permalink to &quot;8.条件运算符&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">表达式</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">表达式1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">表达式2</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// let max = a &gt; b ? a : b</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">表达式</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">表达式1</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">表达式2</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// let max = a &gt; b ? a : b</span></span></code></pre></div><h3 id="_9-控制语句" tabindex="-1">9.控制语句 <a class="header-anchor" href="#_9-控制语句" aria-label="Permalink to &quot;9.控制语句&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">if</span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">if</span><span style="color:#666666;">(){</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#4D9375;">else</span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//不加{}if只会控制紧随其后的一条语句</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">switch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">表达式</span><span style="color:#666666;">){</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">case</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">表达式</span><span style="color:#666666;">:</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">break</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">...</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">default</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">...</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#758575DD;">//表达式进行全等比较,满足则执行代码,否则比较其他case后的表达式</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">if</span><span style="color:#999999;">{</span><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">if</span><span style="color:#999999;">(){</span><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#1E754F;">else</span><span style="color:#999999;">{</span><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//不加{}if只会控制紧随其后的一条语句</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">switch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">表达式</span><span style="color:#999999;">){</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">case</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">表达式</span><span style="color:#999999;">:</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#1E754F;">break</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">...</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">default</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">...</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">//表达式进行全等比较,满足则执行代码,否则比较其他case后的表达式</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_10-循环语句" tabindex="-1">10.循环语句 <a class="header-anchor" href="#_10-循环语句" aria-label="Permalink to &quot;10.循环语句&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">//循环三要素 1.初始化变量  2.条件表达式  3.更新表达式</span></span>
<span class="line"><span style="color:#4D9375;">while</span><span style="color:#666666;">(</span><span style="color:#BD976A;">条件表达式</span><span style="color:#666666;">){...}</span></span>
<span class="line"><span style="color:#4D9375;">do</span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">...</span><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#4D9375;">while</span><span style="color:#666666;">(</span><span style="color:#BD976A;">表达式</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">//先执行一次循环体,再判断条件是否执行循环体</span></span>
<span class="line"><span style="color:#4D9375;">for</span><span style="color:#666666;">(</span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">;</span><span style="color:#BD976A;">i</span><span style="color:#CB7676;">++</span><span style="color:#666666;">){</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">...</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//for(;;)死循环</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">//循环三要素 1.初始化变量  2.条件表达式  3.更新表达式</span></span>
<span class="line"><span style="color:#1E754F;">while</span><span style="color:#999999;">(</span><span style="color:#B07D48;">条件表达式</span><span style="color:#999999;">){...}</span></span>
<span class="line"><span style="color:#1E754F;">do</span><span style="color:#999999;">{</span><span style="color:#393A34;">  </span><span style="color:#999999;">...</span><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#1E754F;">while</span><span style="color:#999999;">(</span><span style="color:#B07D48;">表达式</span><span style="color:#999999;">)</span><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">//先执行一次循环体,再判断条件是否执行循环体</span></span>
<span class="line"><span style="color:#1E754F;">for</span><span style="color:#999999;">(</span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">10</span><span style="color:#999999;">;</span><span style="color:#B07D48;">i</span><span style="color:#AB5959;">++</span><span style="color:#999999;">){</span><span style="color:#393A34;"> </span><span style="color:#999999;">...</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//for(;;)死循环</span></span></code></pre></div><blockquote><p><strong>break与continue</strong>💔终止离它最近的循环, break立即循环停止; continue跳过当前循环,继续下一次循环</p></blockquote><h3 id="_11-数据类型" tabindex="-1">11.数据类型 <a class="header-anchor" href="#_11-数据类型" aria-label="Permalink to &quot;11.数据类型&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">//原始值(7种):</span></span>
<span class="line"><span style="color:#BD976A;">Number</span><span style="color:#666666;">,</span><span style="color:#BD976A;">String</span><span style="color:#666666;">,</span><span style="color:#BD976A;">Boolean</span><span style="color:#666666;">,</span><span style="color:#BD976A;">Null</span><span style="color:#666666;">,</span><span style="color:#BD976A;">Undefined</span><span style="color:#666666;">,</span><span style="color:#BD976A;">BigInt</span><span style="color:#666666;">,</span><span style="color:#BD976A;">Symbol</span></span>
<span class="line"><span style="color:#758575DD;">//引用值(对象)</span></span>
<span class="line"><span style="color:#BD976A;">Object</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">[</span><span style="color:#80A665;">Symbol</span><span style="color:#666666;">()]</span><span style="color:#DBD7CAEE;">:</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">此值不可枚举</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">//原始值(7种):</span></span>
<span class="line"><span style="color:#B07D48;">Number</span><span style="color:#999999;">,</span><span style="color:#B07D48;">String</span><span style="color:#999999;">,</span><span style="color:#B07D48;">Boolean</span><span style="color:#999999;">,</span><span style="color:#B07D48;">Null</span><span style="color:#999999;">,</span><span style="color:#B07D48;">Undefined</span><span style="color:#999999;">,</span><span style="color:#B07D48;">BigInt</span><span style="color:#999999;">,</span><span style="color:#B07D48;">Symbol</span></span>
<span class="line"><span style="color:#A0ADA0;">//引用值(对象)</span></span>
<span class="line"><span style="color:#B07D48;">Object</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">[</span><span style="color:#59873A;">Symbol</span><span style="color:#999999;">()]</span><span style="color:#393A34;">:</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">此值不可枚举</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span></code></pre></div>`,25),e=[o];function c(t,r,y,A,D,i){return a(),n("div",null,e)}const C=s(p,[["render",c]]);export{E as __pageData,C as default};
