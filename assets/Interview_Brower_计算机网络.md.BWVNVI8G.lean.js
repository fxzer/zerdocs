import{_ as e,e as a,ab as o,b as r}from"./chunks/framework.CJCHNkJh.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"Interview/Brower/计算机网络.md","filePath":"Interview/Brower/计算机网络.md"}'),l={name:"Interview/Brower/计算机网络.md"};function s(i,t,h,n,p,c){return r(),a("div",null,t[0]||(t[0]=[o('<h2 id="http与https区别" tabindex="-1">http与https区别 <a class="header-anchor" href="#http与https区别" aria-label="Permalink to &quot;http与https区别&quot;">​</a></h2><p>http：超文本传输协议，明文传输，信息不安全。用的是80端口</p><p>https：具有安全性的ssl加密传输协议，信息安全。用的443端口</p><h2 id="前端缓存" tabindex="-1">前端缓存 <a class="header-anchor" href="#前端缓存" aria-label="Permalink to &quot;前端缓存&quot;">​</a></h2><h3 id="http缓存" tabindex="-1">HTTP缓存 <a class="header-anchor" href="#http缓存" aria-label="Permalink to &quot;HTTP缓存&quot;">​</a></h3><p>在服务器代码上设置</p><ol><li>强缓存：使用Expires、Cache-Control（优先级高 <blockquote><p><strong>判断过程</strong>： 请求再次发起 -&gt; 浏览器根据 expires 和 cache-control 判断目标资源是否命中&quot;强缓存&quot; -&gt; 若命中，直接从缓存获取资源，不再与服务器发生通讯。</p></blockquote></li><li>协商缓存：协商缓存主要有四个头字段，它们两两组合配合使用,当命中协商缓存的时候，服务器会返回HTTP状态码304，让客户端直接 从本地缓存里面读取文件。</li></ol><h3 id="浏览器缓存" tabindex="-1">浏览器缓存 <a class="header-anchor" href="#浏览器缓存" aria-label="Permalink to &quot;浏览器缓存&quot;">​</a></h3><blockquote><p>localStorage、sessionStorage、cookie</p></blockquote>',9)]))}const b=e(l,[["render",s]]);export{u as __pageData,b as default};
